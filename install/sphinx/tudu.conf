#############################################################################
## data source definition
#############################################################################
source tudu_main
{
	type = mysql

	# database server
	sql_host = 127.0.0.1
	sql_user = tudu
	sql_pass = tudu.com
	sql_db   = tudu-db
	sql_port = 3306

	mysql_connect_flags = 32

	sql_query_pre = SET NAMES utf8
	sql_query_pre = REPLACE sph_index_label SELECT 'tudu', MAX(tudu_index_num) FROM td_tudu

	sql_query = SELECT t.tudu_index_num, t.org_id, t.`from`, t.`to`, \
                CONCAT(IFNULL(REPLACE(`from`, '@', ' '), ''), "\n", IFNULL(REPLACE(`to`, '@', ' '), '')) AS users, t.subject, p.content AS body, \
		        t.start_time, t.end_time, t.last_post_time, t.percent, GROUP_CONCAT(u.unique_id) AS uniqueid \
		        FROM td_tudu AS t \
		        LEFT JOIN td_post AS p ON t.tudu_id = p.tudu_id AND p.is_first = 1 \
		        LEFT JOIN td_tudu_user AS u ON t.tudu_id = u.tudu_id \
		        WHERE t.board_id <> '^system' AND t.is_draft = 0 AND tudu_index_num < (SELECT max_id FROM sph_index_label WHERE index_id = 'tudu') \
		        GROUP BY t.tudu_id

	sql_attr_timestamp = start_time
	sql_attr_timestamp = end_time
	sql_attr_timestamp = last_post_time
    sql_attr_str2ordinal = from
    sql_attr_str2ordinal = to
    sql_attr_uint = percent

	sql_range_step = 10000

	sql_ranged_throttle = 0
}

source tudu_inc
{
	type = mysql

	# database server
	sql_host = 127.0.0.1
	sql_user = tudu
	sql_pass = tudu.com
	sql_db   = tudu-db
	sql_port = 3306

	mysql_connect_flags = 32

	sql_query_pre = SET NAMES utf8
	
	sql_query = SELECT t.tudu_index_num, t.org_id, t.`from`, t.`to`, \
                CONCAT(IFNULL(REPLACE(`from`, '@', ' '), ''), "\n", IFNULL(REPLACE(`to`, '@', ' '), '')) AS users, t.subject, p.content AS body, \
                t.start_time, t.end_time, t.last_post_time, t.percent, GROUP_CONCAT(u.unique_id) AS uniqueid \
                FROM td_tudu AS t \
                LEFT JOIN td_post AS p ON t.tudu_id = p.tudu_id AND p.is_first = 1 \
                LEFT JOIN td_tudu_user AS u ON t.tudu_id = u.tudu_id \
                WHERE t.board_id <> '^system' AND t.is_draft = 0 AND tudu_index_num >= (SELECT max_id FROM sph_index_label WHERE index_id = 'tudu') \
		        GROUP BY t.tudu_id

	sql_attr_timestamp = start_time
	sql_attr_timestamp = end_time
	sql_attr_timestamp = last_post_time
    sql_attr_str2ordinal = from
    sql_attr_str2ordinal = to
    sql_attr_uint = percent

	sql_range_step = 10000

	sql_ranged_throttle = 0
}

#############################################################################
## index definition
#############################################################################
index tudu_main
{
    source           = tudu_main            #对应的source名称
    path             = /usr/local/coreseek/index/tudu_main #请修改为实际使用的绝对路径，例如：/usr/local/coreseek/var/...
    docinfo          = extern
    mlock            = 0
    morphology       = none
    min_word_len     = 1
    html_strip       = 1

    #中文分词配置，详情请查看：http://www.coreseek.cn/products-install/coreseek_mmseg/
    charset_dictpath = /usr/local/mmseg3/etc/ #BSD、Linux环境下设置，/符号结尾
    charset_type     = zh_cn.utf-8
    ngram_len        = 1
}

index tudu_inc
{
    source           = tudu_inc            #对应的source名称
    path             = /usr/local/coreseek/index/tudu_inc #请修改为实际使用的绝对路径，例如：/usr/local/coreseek/var/...
    docinfo          = extern
    mlock            = 0
    morphology       = none
    min_word_len     = 1
    html_strip       = 1

    #中文分词配置，详情请查看：http://www.coreseek.cn/products-install/coreseek_mmseg/
    charset_dictpath = /usr/local/mmseg3/etc/ #BSD、Linux环境下设置，/符号结尾
    charset_type     = zh_cn.utf-8
    ngram_len        = 1
}
 
## indexer settings
#############################################################################
 
indexer
{
	# memory limit, in bytes, kiloytes (16384K) or megabytes (256M)
	# optional, default is 32M, max is 2047M, recommended is 256M to 1024M
	mem_limit			= 512M
 
	# maximum IO calls per second (for I/O throttling)
	# optional, default is 0 (unlimited)
	#
	max_iops			= 0
 
 
	# maximum IO call size, bytes (for I/O throttling)
	# optional, default is 0 (unlimited)
	#
	max_iosize		= 0
 
 
	# maximum xmlpipe2 field length, bytes
	# optional, default is 2M
	#
	# max_xmlpipe2_field	= 4M
 
 
	# write buffer size, bytes
	# several (currently up to 4) buffers will be allocated
	# write buffers are allocated in addition to mem_limit
	# optional, default is 1M
	#
	# write_buffer		= 1M
}
 
#############################################################################
## searchd settings
#############################################################################
 
searchd
{
	# hostname, port, or hostname:port, or /unix/socket/path to listen on
	# multi-value, multiple listen points are allowed
	# optional, default is 0.0.0.0:9312 (listen on all interfaces, port 9312)
	#
	# listen				= 127.0.0.1
	# listen				= 192.168.0.1:9312
	# listen				= 9312
	# listen				= /var/run/searchd.sock
 
 
	# log file, searchd run info is logged here
	# optional, default is 'searchd.log'
	log					= /usr/local/coreseek/var/log/searchd.log
 
	# query log file, all search queries are logged here
	# optional, default is empty (do not log queries)
	query_log				= /usr/local/coreseek/var/log/query.log
 
	# client read timeout, seconds
	# optional, default is 5
	read_timeout		= 5
 
	# request timeout, seconds
	# optional, default is 5 minutes
	client_timeout		= 300
 
	# maximum amount of children to fork (concurrent searches to run)
	# optional, default is 0 (unlimited)
	max_children		= 0
 
	# PID file, searchd process ID file name
	# mandatory
	pid_file			= /usr/local/coreseek/var/log/searchd.pid
 
	# max amount of matches the daemon ever keeps in RAM, per-index
	# WARNING, THERE'S ALSO PER-QUERY LIMIT, SEE SetLimits() API CALL
	# default is 1000 (just like Google)
	max_matches			= 1000
 
	# seamless rotate, prevents rotate stalls if precaching huge datasets
	# optional, default is 1
	seamless_rotate		= 1
 
	# whether to forcibly preopen all indexes on startup
	# optional, default is 0 (do not preopen)
	preopen_indexes		= 1
 
	# whether to unlink .old index copies on succesful rotation.
	# optional, default is 1 (do unlink)
	unlink_old			= 1
 
	# attribute updates periodic flush timeout, seconds
	# updates will be automatically dumped to disk this frequently
	# optional, default is 0 (disable periodic flush)
	#
	# attr_flush_period	= 900
 
 
	# instance-wide ondisk_dict defaults (per-index value take precedence)
	# optional, default is 0 (precache all dictionaries in RAM)
	#
	# ondisk_dict_default	= 1
 
 
	# MVA updates pool size
	# shared between all instances of searchd, disables attr flushes!
	# optional, default size is 1M
	mva_updates_pool	= 1M
 
	# max allowed network packet size
	# limits both query packets from clients, and responses from agents
	# optional, default size is 8M
	max_packet_size		= 8M
 
	# crash log path
	# searchd will (try to) log crashed query to 'crash_log_path.PID' file
	# optional, default is empty (do not create crash logs)
	#
	crash_log_path		= /usr/local/coreseek/var/log/crash.log
 
 
	# max allowed per-query filter count
	# optional, default is 256
	max_filters			= 256
 
	# max allowed per-filter values count
	# optional, default is 4096
	max_filter_values	= 4096
 
 
	# socket listen queue length
	# optional, default is 5
	#
	# listen_backlog		= 5
 
 
	# per-keyword read buffer size
	# optional, default is 256K
	#
	# read_buffer			= 256K
 
 
	# unhinted read size (currently used when reading hits)
	# optional, default is 32K
	#
	# read_unhinted		= 32K
}
